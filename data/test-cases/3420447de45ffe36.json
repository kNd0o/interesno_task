{
  "uid" : "3420447de45ffe36",
  "name" : "Login",
  "fullName" : "tests.login_test.TestLogin#test_login",
  "historyId" : "2ce0d2b159a1b134adc13e328bfd71c0",
  "time" : {
    "start" : 1716117130744,
    "stop" : 1716117133215,
    "duration" : 2471
  },
  "description" : " Checks if user is logged in and Dashboard page is opened ",
  "descriptionHtml" : "<p>Checks if user is logged in and Dashboard page is opened</p>\n",
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
  "statusTrace" : "self = <login_test.TestLogin object at 0x7ff985b15760>\n\n    @allure.title('Login')\n    @allure.severity('Critical')\n    def test_login(self):\n        \"\"\" Checks if user is logged in and Dashboard page is opened \"\"\"\n    \n>       self.login_page.login(self.data.EMAIL, self.data.PASSWORD)\n\ntests/login_test.py:14: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/login_page.py:30: in login\n    self.click_submit()\npages/login_page.py:24: in click_submit\n    self.wait.until(EC.element_to_be_clickable(self.SUBMIT_BUTTON)).click()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"fa1b0838cc3a37dbda33d08aa8d8f7fb\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7ff983d4f9c0>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n../local/lib/python3.12/site-packages/selenium/webdriver/support/wait.py:105: TimeoutException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "driver",
    "time" : {
      "start" : 1716117130287,
      "stop" : 1716117130744,
      "duration" : 457
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "setup",
    "time" : {
      "start" : 1716117130744,
      "stop" : 1716117130744,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "testStage" : {
    "description" : " Checks if user is logged in and Dashboard page is opened ",
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
    "statusTrace" : "self = <login_test.TestLogin object at 0x7ff985b15760>\n\n    @allure.title('Login')\n    @allure.severity('Critical')\n    def test_login(self):\n        \"\"\" Checks if user is logged in and Dashboard page is opened \"\"\"\n    \n>       self.login_page.login(self.data.EMAIL, self.data.PASSWORD)\n\ntests/login_test.py:14: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/login_page.py:30: in login\n    self.click_submit()\npages/login_page.py:24: in click_submit\n    self.wait.until(EC.element_to_be_clickable(self.SUBMIT_BUTTON)).click()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"fa1b0838cc3a37dbda33d08aa8d8f7fb\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7ff983d4f9c0>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n../local/lib/python3.12/site-packages/selenium/webdriver/support/wait.py:105: TimeoutException",
    "steps" : [ {
      "name" : "Open https://test.qa.saritasa.com/admin/login page",
      "time" : {
        "start" : 1716117130744,
        "stop" : 1716117131050,
        "duration" : 306
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false,
      "stepsCount" : 0
    }, {
      "name" : "Entering email",
      "time" : {
        "start" : 1716117131050,
        "stop" : 1716117131097,
        "duration" : 47
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "email",
        "value" : "''"
      } ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true,
      "stepsCount" : 0
    }, {
      "name" : "Entering password",
      "time" : {
        "start" : 1716117131098,
        "stop" : 1716117131159,
        "duration" : 61
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "password",
        "value" : "'NewQA123!'"
      } ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true,
      "stepsCount" : 0
    }, {
      "name" : "Clicking submit button",
      "time" : {
        "start" : 1716117131159,
        "stop" : 1716117133214,
        "duration" : 2055
      },
      "status" : "broken",
      "statusMessage" : "selenium.common.exceptions.TimeoutException: Message: \n\n",
      "statusTrace" : "  File \"/usr/local/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/usr/workspace/pages/login_page.py\", line 24, in click_submit\n    self.wait.until(EC.element_to_be_clickable(self.SUBMIT_BUTTON)).click()\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/support/wait.py\", line 105, in until\n    raise TimeoutException(message, screen, stacktrace)\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true,
      "stepsCount" : 0
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true,
    "stepsCount" : 4
  },
  "afterStages" : [ {
    "name" : "driver::0",
    "time" : {
      "start" : 1716117133244,
      "stop" : 1716117133329,
      "duration" : 85
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "Login testing"
  }, {
    "name" : "severity",
    "value" : "Critical"
  }, {
    "name" : "parentSuite",
    "value" : "tests"
  }, {
    "name" : "suite",
    "value" : "login_test"
  }, {
    "name" : "subSuite",
    "value" : "TestLogin"
  }, {
    "name" : "host",
    "value" : "6e2a86cc5387"
  }, {
    "name" : "thread",
    "value" : "1-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.login_test"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "critical",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 6,
        "skipped" : 0,
        "passed" : 0,
        "unknown" : 0,
        "total" : 6
      },
      "items" : [ {
        "uid" : "be5d58bb470dfc61",
        "status" : "broken",
        "statusDetails" : "TypeError: 'NoneType' object is not iterable",
        "time" : {
          "start" : 1716116468644,
          "stop" : 1716116468942,
          "duration" : 298
        }
      }, {
        "uid" : "675ff84cb1ad73be",
        "status" : "broken",
        "statusDetails" : "TypeError: 'NoneType' object is not iterable",
        "time" : {
          "start" : 1716116320033,
          "stop" : 1716116320584,
          "duration" : 551
        }
      }, {
        "uid" : "5176f742e01d14f5",
        "status" : "broken",
        "statusDetails" : "TypeError: 'NoneType' object is not iterable",
        "time" : {
          "start" : 1716115466728,
          "stop" : 1716115467030,
          "duration" : 302
        }
      }, {
        "uid" : "41e346d87516dc95",
        "status" : "broken",
        "statusDetails" : "TypeError: 'NoneType' object is not iterable",
        "time" : {
          "start" : 1716113752396,
          "stop" : 1716113752624,
          "duration" : 228
        }
      }, {
        "uid" : "ab2fb8f502d684f9",
        "status" : "broken",
        "statusDetails" : "TypeError: 'NoneType' object is not iterable",
        "time" : {
          "start" : 1716113254421,
          "stop" : 1716113254753,
          "duration" : 332
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "3420447de45ffe36.json",
  "parameterValues" : [ ]
}